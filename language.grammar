# work in progress...
# RULES:
# {<rule>}* : 0 or more of <rule>, optionally space separated
# {<rule>}+ : 1 or more of <rule>, optionally space separated
# {<rule>}? : 0 or 1 of <rule>
# any rule or string that is separated by a space means they may be
#   0 or more spaces in between them
# any rule or string that is not separated by a space means they
#   must not have spaces in between them

<program> = {<procedure>}+

<procedure> = proc <space> <identifier> ( <identifier-list> ) <block>

<statement> = <identifier> = <expression> ;
            | <expression> ;
            | return {<expression>}? ;
            | <block>
            | when <expression> then <statement>
            | when <expression> then <statement> otherwise <statement>
            # TODO: unless statement
            | while <expression> then <statement>

<block> = { {<statement>}* }

<expression> = <prefix-op> <expression>
             | <expression> <infix-op> <expression>
             | ( <expression> )
             | <identifier> ( <expression-list> )
             | <identifier>
             | <number>
             | <boolean>
             | <string>

<expression-list> = <expression>
                  | <expression-list> , <expression>

<identifier> = # string of <digit> | <alpha> | ! | ?, but not all <digit>

<number> = # string of <digit>

<boolean> = !t | !f

<string> = "{<character>}*"

<boolean> = !t | !f

<space> = # space (ascii 10), not to be confused with whitespace
